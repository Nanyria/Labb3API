// <auto-generated />
using Labb3API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb3API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240527081328_dto")]
    partial class dto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.Property<int>("InterestsInterestID")
                        .HasColumnType("int");

                    b.Property<int>("linksLinkID")
                        .HasColumnType("int");

                    b.HasKey("InterestsInterestID", "linksLinkID");

                    b.HasIndex("linksLinkID");

                    b.ToTable("InterestLink");
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.Property<int>("InterestsInterestID")
                        .HasColumnType("int");

                    b.Property<int>("peoplePersonID")
                        .HasColumnType("int");

                    b.HasKey("InterestsInterestID", "peoplePersonID");

                    b.HasIndex("peoplePersonID");

                    b.ToTable("InterestPerson");
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.Property<int>("LinksLinkID")
                        .HasColumnType("int");

                    b.Property<int>("PeoplePersonID")
                        .HasColumnType("int");

                    b.HasKey("LinksLinkID", "PeoplePersonID");

                    b.HasIndex("PeoplePersonID");

                    b.ToTable("LinkPerson");
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Connections.PersonInterests", b =>
                {
                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("PersonInterestsID")
                        .HasColumnType("int");

                    b.HasKey("InterestID", "PersonID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            PersonID = 1,
                            PersonInterestsID = 0
                        },
                        new
                        {
                            InterestID = 2,
                            PersonID = 1,
                            PersonInterestsID = 0
                        },
                        new
                        {
                            InterestID = 1,
                            PersonID = 2,
                            PersonInterestsID = 0
                        });
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Connections.PersonalInterestLinks", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("LinkID")
                        .HasColumnType("int");

                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<int>("PersonalLinkID")
                        .HasColumnType("int");

                    b.HasKey("PersonID", "LinkID", "InterestID");

                    b.HasIndex("InterestID");

                    b.HasIndex("LinkID");

                    b.ToTable("PersonalInterestLinks");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            LinkID = 1,
                            InterestID = 1,
                            PersonalLinkID = 0
                        },
                        new
                        {
                            PersonID = 2,
                            LinkID = 1,
                            InterestID = 1,
                            PersonalLinkID = 0
                        });
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Interest", b =>
                {
                    b.Property<int>("InterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestID"));

                    b.Property<string>("InterestTitle")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InterestsDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InterestID");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            InterestTitle = "Surfing",
                            InterestsDescription = "Väldigt kul, vatten"
                        },
                        new
                        {
                            InterestID = 2,
                            InterestTitle = "Matlagning",
                            InterestsDescription = "Väldigt kul, ingredienser och grejer"
                        },
                        new
                        {
                            InterestID = 3,
                            InterestTitle = "Datorspel",
                            InterestsDescription = "Väldigt kul, dator"
                        });
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Link", b =>
                {
                    b.Property<int>("LinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkID"));

                    b.Property<string>("LinkSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkID");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkID = 1,
                            LinkSite = "https://magnusandfriends.se/sv/den-kompletta-surf-guiden/?gad_source=1&gclid=Cj0KCQjwjLGyBhCYARIsAPqTz18D50Ic8DNB1AC5G4p9x7sPzTO-06fC7Xs3faEYufv1PEYx2y0ez-gaAn4VEALw_wcB"
                        });
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("float");

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            FirstName = "Adam",
                            LastName = "Andersson",
                            PhoneNumber = 42552525.0
                        },
                        new
                        {
                            PersonID = 2,
                            FirstName = "Eva",
                            LastName = "Johansson",
                            PhoneNumber = 731234567.0
                        });
                });

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.HasOne("SUT23TeknikButikModels.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Link", null)
                        .WithMany()
                        .HasForeignKey("linksLinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.HasOne("SUT23TeknikButikModels.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Person", null)
                        .WithMany()
                        .HasForeignKey("peoplePersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.HasOne("SUT23TeknikButikModels.Link", null)
                        .WithMany()
                        .HasForeignKey("LinksLinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Person", null)
                        .WithMany()
                        .HasForeignKey("PeoplePersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Connections.PersonInterests", b =>
                {
                    b.HasOne("SUT23TeknikButikModels.Interest", "Interests")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Person", "person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interests");

                    b.Navigation("person");
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Connections.PersonalInterestLinks", b =>
                {
                    b.HasOne("SUT23TeknikButikModels.Interest", "Interest")
                        .WithMany("personalInterestLinks")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Link", "Link")
                        .WithMany("personalInterestLinks")
                        .HasForeignKey("LinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SUT23TeknikButikModels.Person", "People")
                        .WithMany("personalInterestLinks")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Link");

                    b.Navigation("People");
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Interest", b =>
                {
                    b.Navigation("PersonInterests");

                    b.Navigation("personalInterestLinks");
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Link", b =>
                {
                    b.Navigation("personalInterestLinks");
                });

            modelBuilder.Entity("SUT23TeknikButikModels.Person", b =>
                {
                    b.Navigation("PersonInterests");

                    b.Navigation("personalInterestLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
